variables:
  IMAGE_ID: 'f280b874c49cee3ce2e5f3c4af1495238e134e3c'
  # Docker Images
  DOCKER_REGISTRY: "registry.gitlab.com/freedesktop-sdk/infrastructure/freedesktop-sdk-docker-images"
  DOCKER_AMD64: "${DOCKER_REGISTRY}/bst14/amd64:${IMAGE_ID}"
  DOCKER_AARCH64: "${DOCKER_REGISTRY}/bst14/arm64:${IMAGE_ID}"
  DOCKER_POWERPC64LE: "${DOCKER_REGISTRY}/bst14/ppc64le:${IMAGE_ID}"

  XDG_CACHE_HOME: "${CI_PROJECT_DIR}/cache"
  # mesa-git-extension is only available through Flathub beta
  RELEASE_CHANNEL: beta 

stages:
- build
- prepare-publish
- publish
- finish-publish

before_script:
  - |
    if [ -f /cache-certificate/server.crt ]; then
    mkdir -p ~/.config
    cat >> ~/.config/buildstream.conf << EOF
    projects:
      freedesktop-sdk:
        artifacts:
          - url: https://local-cas-server:1102
            server-cert: /cache-certificate/server.crt

    EOF
    fi
  - |
    export REPO_TOKEN="${FLATHUB_REPO_TOKEN_BETA}"

.build_template: &build_definition
  stage: build
  interruptible: true
  except:
  - master
  - /^release/.*
  script:
  -  make build ARCH=${ARCH}
  artifacts:
    when: always
    paths:
      - ${CI_PROJECT_DIR}/cache/buildstream/logs

build_x86_64:
  <<: *build_definition
  image: $DOCKER_AMD64
  variables:
    ARCH: x86_64
  tags:
    - x86_64

build_i686:
  <<: *build_definition
  image: $DOCKER_AMD64
  variables:
    ARCH: i686
  tags:
    - x86_64

build_aarch64:
  <<: *build_definition
  image: $DOCKER_AARCH64
  variables:
    ARCH: aarch64
  tags:
    - aarch64

build_arm:
  <<: *build_definition
  image: $DOCKER_AARCH64
  variables:
    ARCH: arm
  tags:
    - armhf

prepare_publish:
  image: $DOCKER_AMD64
  stage: prepare-publish
  tags:
  - x86_64
  script:
  - flat-manager-client create https://hub.flathub.org/ "${RELEASE_CHANNEL}" > publish_build.txt
  artifacts:
    paths:
    - publish_build.txt
  only:
  - master
  - /release/.*

.publish_template: &publish
  stage: publish
  script:
  - make export-repo RELEASE_KIND=${RELEASE_CHANNEL} REPO=repo
  - flatpak build-update-repo --generate-static-deltas --prune repo
  - flat-manager-client push $(cat publish_build.txt) repo
  dependencies:
  - prepare_publish
  artifacts:
    when: always
    paths:
    - ${CI_PROJECT_DIR}/cache/buildstream/logs
  only:
  - master
  - /release/.*

publish_x86_64:
  image: $DOCKER_AMD64
  <<: *publish
  tags:
  - x86_64
  - cache_x86_64
  variables:
    ARCH: x86_64

publish_i686:
  image: $DOCKER_AMD64
  <<: *publish
  tags:
  - x86_64
  - cache_i686
  variables:
    ARCH: i686

finish_publish:
  image: $DOCKER_AMD64
  stage: finish-publish
  tags:
  - x86_64
  script:
  - flat-manager-client commit --wait $(cat publish_build.txt)
  - flat-manager-client publish --wait $(cat publish_build.txt)
  - flat-manager-client purge $(cat publish_build.txt)
  only:
  - master
  - /release/.*
  dependencies:
  - prepare_publish

finish_publish_failed:
  image: $DOCKER_AMD64
  stage: finish-publish
  tags:
  - x86_64
  script:
  - flat-manager-client purge $(cat publish_build.txt)
  only:
  - master
  - /release/.*
  when: on_failure
  dependencies:
  - prepare_publish
